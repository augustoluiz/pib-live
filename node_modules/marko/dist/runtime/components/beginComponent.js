"use strict";

const ComponentDef = require("./ComponentDef");

var FLAG_WILL_RERENDER_IN_BROWSER = 1;
// var FLAG_HAS_BODY_EL = 2;
// var FLAG_HAS_HEAD_EL = 4;
var FLAG_OLD_HYDRATE_NO_CREATE = 8;

module.exports = function beginComponent(componentsContext, component, key, ownerComponentDef, isSplitComponent, isImplicitComponent, existingComponentDef) {
  var componentId = component.id;

  // existingComponentDef is only here to allow binding a conditional
  // widget.  It should be removed when the legacy compat layer is removed.
  var componentDef = existingComponentDef || (componentsContext._O_ = new ComponentDef(component, componentId, componentsContext));

  var ownerIsRenderBoundary = ownerComponentDef && ownerComponentDef._E_;
  var ownerWillRerender = ownerComponentDef && ownerComponentDef._F_ & FLAG_WILL_RERENDER_IN_BROWSER;
  // On the server
  if (!componentsContext.s_ && ownerWillRerender) {
    componentDef._F_ |= FLAG_WILL_RERENDER_IN_BROWSER;
    return componentDef;
  }

  if (isImplicitComponent === true) {
    // We don't mount implicit components rendered on the server
    // unless the implicit component is nested within a UI component
    // that will re-render in the browser
    return componentDef;
  }

  componentsContext.h_.push(componentDef);

  let out = componentsContext.B_;
  let runtimeId = out.global.runtimeId;

  componentDef._E_ = true;

  if (isSplitComponent === false && out.global.noBrowserRerender !== true) {
    componentDef._F_ |= FLAG_WILL_RERENDER_IN_BROWSER;
    componentDef.ab_ = componentsContext.s_;
    componentsContext.s_ = false;
  }

  if (out.global.oldHydrateNoCreate === true) {
    componentDef._F_ |= FLAG_OLD_HYDRATE_NO_CREATE;
  }

  if ((ownerIsRenderBoundary || ownerWillRerender) && key != null) {
    out.w("<!--" + runtimeId + "^" + componentId + " " + ownerComponentDef.id + " " + key + "-->");
  } else {
    out.w("<!--" + runtimeId + "#" + componentId + "-->");
  }

  return componentDef;
};